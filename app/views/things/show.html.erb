<% if @thing.device_type == "temperatureMeasurement" %>
<% uri = "https://dazzling-heat-3134.firebaseio.com" %>
<% firebase = Firebase::Client.new(uri) %>
<% temps = firebase.get("events/"+@thing.uid+"/temperature") %>
<% results = JSON.parse(temps.response.response_body).to_hash %>


<style>
#chartdiv {
    width   : 100%;
    height  : 600px;
}                           
</style>



                



               
                <div class="panel">
                    <div class="panel-heading">
                        <span class="panel-title">Recent Temps</span>
                    </div>
                    <div class="panel-body">

                        <div class="graph-container">
                          
                            <div id="chartdiv"></div>                           


<script>
    var chartData = 
    <% temps = results.map do |item1, item2| %>
                            <% if item2["date"] != nil %>
                                <% if item2["value"] != nil %>
                                <%  { date: item2["date"].to_datetime.strftime('%Y-%m-%d %H:%M'), temps: item2["value"] } %>
                                <% end %>
                            <% end %>
                         <% end %>

                         <%= raw(temps.compact.to_json) %>;
    var chart = AmCharts.makeChart("chartdiv", {
    "type": "serial",
    "theme": "light",
    "pathToImages": "http://www.amcharts.com/lib/3/images/",
    "dataProvider": chartData,
    "valueAxes": [{
        "axisAlpha": 0.2,
        "dashLength": 1,
        "position": "left"
    }],
    "mouseWheelZoomEnabled":true,
    "graphs": [{
        "id":"g1",
        "balloonText": "[[category]]<br /><b><span style='font-size:14px;'>value: [[value]]</span></b>",
        "bullet": "round",
        "bulletBorderAlpha": 1,
        "bulletColor":"#FFFFFF",
        "hideBulletsCount": 50,
        "title": "red line",
        "valueField": "temps",
        "useLineColorForBulletBorder":true
    }],
    "chartScrollbar": {
        
        "graph": "g1",
        "scrollbarHeight": 40
    },
    "chartCursor": {
        "cursorPosition": "mouse"
    },
    "categoryField": "date",
    "categoryAxis": {
        "parseDates": true,
        "axisColor": "#DADADA",
        "dashLength": 1,
        "minorGridEnabled": true,
        "minPeriod": "mm",
        "groupToPeriods": ["ss", "10ss", "30ss", "mm", "10mm", "30mm", "hh", "DD", "WW", "MM", "YYYY"],
        "equalSpacing": true
    },
    "exportConfig":{
      menuRight: '20px',
      menuBottom: '30px',
      menuItems: [{
      icon: 'http://www.amcharts.com/lib/3/images/export.png',
      format: 'png'   
      }]  
    }
});

chart.addListener("rendered", zoomChart);
zoomChart();

// this method is called when chart is first inited as we listen for "dataUpdated" event
function zoomChart() {
    // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
    chart.zoomToIndexes(chartData.length - 40, chartData.length - 1);
}


// generate some random data, quite different range

</script>
<% end %>


<% if @thing.device_type == "relativeHumidityMeasurement" %>
<% uri = "https://dazzling-heat-3134.firebaseio.com" %>
<% firebase = Firebase::Client.new(uri) %>
<% hums = firebase.get("events/"+@thing.uid+"/humidity") %>
<% results = JSON.parse(hums.response.response_body).to_hash %>


<style>
#chartdiv {
    width   : 100%;
    height  : 600px;
}                           
</style>


               
                <div class="panel">
                    <div class="panel-heading">
                        <span class="panel-title">Recent Temps</span>
                    </div>
                    <div class="panel-body">

                        <div class="graph-container">
                          
                            <div id="chartdiv"></div>                           


<script>
    var chartData = 
    <% hums = results.map do |item1, item2| %>
                            <% if item2["date"] != nil %>
                                <% if item2["value"] != nil %>
                                <%  { date: item2["date"].to_datetime.strftime('%Y-%m-%d %H:%M'), hum: item2["value"] } %>
                                <% end %>
                            <% end %>
                         <% end %>

                         <%= raw(hums.compact.to_json) %>;
    var chart = AmCharts.makeChart("chartdiv", {
    "type": "serial",
    "theme": "light",
    "pathToImages": "http://www.amcharts.com/lib/3/images/",
    "dataProvider": chartData,
    "valueAxes": [{
        "axisAlpha": 0.2,
        "dashLength": 1,
        "position": "left"
    }],
    "mouseWheelZoomEnabled":true,
    "graphs": [{
        "id":"g1",
        "balloonText": "[[category]]<br /><b><span style='font-size:14px;'>value: [[value]]</span></b>",
        "bullet": "round",
        "bulletBorderAlpha": 1,
        "bulletColor":"#FFFFFF",
        "hideBulletsCount": 50,
        "title": "red line",
        "valueField": "hum",
        "useLineColorForBulletBorder":true
    }],
    "chartScrollbar": {
        
        "graph": "g1",
        "scrollbarHeight": 40
    },
    "chartCursor": {
        "cursorPosition": "mouse"
    },
    "categoryField": "date",
    "categoryAxis": {
        "parseDates": true,
        "axisColor": "#DADADA",
        "dashLength": 1,
        "minorGridEnabled": true,
        "minPeriod": "mm",
        "groupToPeriods": ["ss", "10ss", "30ss", "mm", "10mm", "30mm", "hh", "DD", "WW", "MM", "YYYY"],
        "equalSpacing": true
    },
    "exportConfig":{
      menuRight: '20px',
      menuBottom: '30px',
      menuItems: [{
      icon: 'http://www.amcharts.com/lib/3/images/export.png',
      format: 'png'   
      }]  
    }
});

chart.addListener("rendered", zoomChart);
zoomChart();

// this method is called when chart is first inited as we listen for "dataUpdated" event
function zoomChart() {
    // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
    chart.zoomToIndexes(chartData.length - 40, chartData.length - 1);
}


// generate some random data, quite different range

</script>
<% end %>