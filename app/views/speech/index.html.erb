<div class="container">
  <center><div id="microphone"></div></center>
    <pre id="result"></pre>
    <div id="info"></div>
    <div id="error"></div>
    

    <div class="panel">
      <div class="panel-heading">
        Voice Command Demo 
      </div>
      <div class="panel-body">
        <p>This is a demo of the voice command functionality. The main purpose at this poin is to train the speech recognitoon AI. It will not interact with your devices, only return the command it thinks you said. 
        </p>
        <p> Example Commands: </p>

        <ul> 
          <li>Turn the lights off in the living room.</li>
          <li>Turn the back porch lights off.</li>
        </ul>
      </div>
    </div>
</div>

    <script src="microphone/microphone.min.js"></script>

    <script>
      var mic = new Wit.Microphone(document.getElementById("microphone"));
      var info = function (msg) {
        document.getElementById("info").innerHTML = msg;
      };
      var error = function (msg) {
        document.getElementById("error").innerHTML = msg;
      };
      mic.onready = function () {
        info("Microphone is ready to record");
        
         
      };
      mic.onaudiostart = function () {
        info("Recording started");
        error("");
      };
      mic.onaudioend = function () {
        info("Recording stopped, processing started");
      };
      mic.onresult = function (intent, entities) {
        var r = kv("intent", intent);
        var speech = "";
        for (var k in entities) {
          var e = entities[k];
          speech += e.value;
          speech += " ";

          

          if (!(e instanceof Array)) {
            r += kv(k, e.value);
            utterance += e.value;
          } else {
            for (var i = 0; i < e.length; i++) {
              r += kv(k, e[i].value);
               
            }
          }
        }
        var utterance = new SpeechSynthesisUtterance("Did you say?"+speech);
        window.speechSynthesis.speak(utterance);
        document.getElementById("result").innerHTML = r;
      };
      mic.onerror = function (err) {
        error("Error: " + err);
      };
      mic.onconnecting = function () {
        info("Microphone is connecting");
      };
      mic.ondisconnected = function () {
        info("Microphone is not connected");
      };

      mic.connect("6FZKTWOZDJQ5FSBZ4QXJSOPUSLOL7E2A");
      // mic.start();
      // mic.stop();

      function kv (k, v) {
        if (toString.call(v) !== "[object String]") {
          v = JSON.stringify(v);
        }
        return k + "=" + v + "\n";
      }
    </script>